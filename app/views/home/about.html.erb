<div class="content about-page">
	<section class="section">
		<h2 class="subtitle">What is a GLSL shader?</h2>

		<p>
			A shader is a tiny piece of code that runs in your GPU to generate all the epic visuals you see in today's games, movies, etc.
		</p>
		<p>
			A shader is a tiny piece of code that runs in your GPU to generate all the epic visuals you see in today's games, movies, etc.
		</p>
		<p>
			<a href="https://en.wikipedia.org/wiki/OpenGL_Shading_Language">GLSL</a> (Open GL Shading Language) is a shading language that looks like <a href="https://en.wikipedia.org/wiki/C_(programming_language)">C</a> code.
			<br><br>
			Shaders are very exiting to code, look at ShaderGif's <a href="/editor/examples">examples</a>, in the GLSL section, and try adding your artistic touch to these!
		</p>

		<h2 class="subtitle">What is Javascript?</h2>
		<p>
			Javascript is a very popular programming language. It powers most of the websites you use everyday. You can use it to make gifs with ShaderGif, without any CSS or HTML knowledge.
			<br><br>
			We suggest you try the examples in ShaderGif and search the web for <a href="https://google.com/?q=canvas javascript" target="_blank">&ltcanvas&gt; javascript</a> to discover all the methods that you can use!
		</p>
		
		<h2 class="subtitle">What is p5.js?</h2>
		<p>
			p5.js is a Javascript library created by Lauren McCarthy inspired by the processing language.
			<br>
			You can find more information about it <a href="https://p5js.org" target="_blank">here</a>. Come back with code samples and try them in ShaderGif!
		</p>	

		<h2 class="subtitle">Why play gifs on the homepage instead of running the code?</h2>
		<p>
			<ol>
				<li>You don't have to maintain the code ever.</li>
				<li>Browsers don't need to compute your gif again.</li>
			</ol>
		</p>
		<p>
			Instead of trying to support all graphics cards, CPU, browser, etc. ShaderGif works with gifs and preview videos. Gifs just work. They work everywhere.
			Also, gifs can be shared easily on the internet, which makes them an awesome medium. Of course, gifs have some problems (artifacts, big size), but the big size
			is compensated by the generation of video previews and the artifacts actually give gifs their beauty.
		</p>
		<p>
			For the details, we actually play video versions of the gifs to reduce size.
		</p>
		<p>The following image is an example of a video version of a gif(0.5MB). Here is the original gif link&nbsp;: <a target="_blank" href="https://shadergif.com/gifs/udeP4Pod8Y9ycaEp2017-12-05-23h30m.gif">gif</a> (2.12MB). If you compare, you will see that the video saves a lot of network and is quite similar visually.</p>
		<div class="video-container">
			<video loop="loop" poster="https://shadergif.com/gifs/generated/udeP4Pod8Y9ycaEp2017-12-05-23h30m.gif-preview.jpg" preload="none" autoplay controls>
				<source src="https://shadergif.com/gifs/generated/udeP4Pod8Y9ycaEp2017-12-05-23h30m.gif-vid.webm" type="video/webm">
				<source src="https://shadergif.com/gifs/generated/udeP4Pod8Y9ycaEp2017-12-05-23h30m.gif-vid.mp4" type="video/mp4">
				<source src="https://shadergif.com/gifs/generated/udeP4Pod8Y9ycaEp2017-12-05-23h30m.gif-vid.ogv" type="video/ogg">
			</video>
		</div>

		<h2 class="subtitle">LocalStorage Backup</h2>
		<p>When you hit CTRL+R in the editor (/editor/ or /shader-editor/), you don't lose the code,<br> unless you where browsing an URL like /editor/316/edit.
			<br>
			Be careful in this case because the original shader will be loaded.
			<br>
			
			This means you can leave your work in progress in the editor and it should be there when you come back,<br> but when you try another shader's code, it gets overridden.
			<br>
			To back up your shaders a bit more safely, use the "draft" saving feature.
		</p>

		<h2 class="subtitle">What is the history of ShaderGif?</h2>
		<p>
			<ul>
				<li>Somewhere around 2015, I started playing around with shaders in a native C++ app while trying OpenGL development.</li>
				<li>I quickly realised that I could spend 95% of my time happily coding shaders, I wanted to share gifs on tumblr (<a href="https://dontcode.tumblr.com/archive">@dontcode</a>).</li>
				<li>In the beginning, ShaderGif was just a static html tool built to create gifs from shaders (for at least 1 year).</li>
				<li>Then, in November 2017, I started a rails application to create a front page, comments, drafts, etc.</li>
				<li>As of October 2018, there are 2 posting users (Including me: <a href="https://shadergif.com/user/antoineMoPa">@antoineMoPa</a>, <a href="https://shadergif.com/user/Iona">@Iona</a>) 11 non-posting users or hacker bots.</li>
			</ul>
			For current stats, look bellow.
		</p>

		<h2 class="subtitle">What are some considerations when making gifs?</h2>
		<p>
			The ShaderGif editor shows the size of your gifs in kilobytes.<br>
			Making small gifs is an art. To save bandwidth, upload time and encoding time:
			<ul>
				<li>Keep frame count low (around 10 frames). Sometimes you can use a bit more frames for simple gifs with few colors.</li>
				<li>Avoid gradients when possible, because the number of different colors that have to be encoded becomes huge.</li>
				<li>Simple black and white gifs can be surprisingly tiny.</li>
			</ul>
			If you need hundreds of frames of a shader you just coded (because you want to share it outside of ShaderGif),
			it is better to download the zip and make a video with an external software.
		</p>
	</section>
</div>
